//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RentalCMS.RentalCore {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RentalCore.IRentalCore")]
    public interface IRentalCore {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/Login", ReplyAction="http://tempuri.org/IRentalCore/LoginResponse")]
        bool Login([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/FileUpload", ReplyAction="http://tempuri.org/IRentalCore/FileUploadResponse")]
        void FileUpload(string fileName, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/FileDownload", ReplyAction="http://tempuri.org/IRentalCore/FileDownloadResponse")]
        byte[] FileDownload(string remotePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/FlatSearch", ReplyAction="http://tempuri.org/IRentalCore/FlatSearchResponse")]
        RentalCommon.SearchResult<DAL.view_flat_info> FlatSearch(RentalCommon.SearchQuery query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/FlatByUrl", ReplyAction="http://tempuri.org/IRentalCore/FlatByUrlResponse")]
        DAL.flat_info FlatByUrl(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/FlatById", ReplyAction="http://tempuri.org/IRentalCore/FlatByIdResponse")]
        DAL.flat_info FlatById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/FlatAdd", ReplyAction="http://tempuri.org/IRentalCore/FlatAddResponse")]
        int FlatAdd(DAL.flat_info flat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/FlatUpdate", ReplyAction="http://tempuri.org/IRentalCore/FlatUpdateResponse")]
        void FlatUpdate(DAL.flat_info flat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/FlatDelete", ReplyAction="http://tempuri.org/IRentalCore/FlatDeleteResponse")]
        void FlatDelete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/ImageUpdate", ReplyAction="http://tempuri.org/IRentalCore/ImageUpdateResponse")]
        void ImageUpdate(DAL.image_list[] images, int flatId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/ImagesByFlatId", ReplyAction="http://tempuri.org/IRentalCore/ImagesByFlatIdResponse")]
        DAL.image_list[] ImagesByFlatId(int flatId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/BlackListAll", ReplyAction="http://tempuri.org/IRentalCore/BlackListAllResponse")]
        DAL.black_list[] BlackListAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/BlackListById", ReplyAction="http://tempuri.org/IRentalCore/BlackListByIdResponse")]
        DAL.black_list BlackListById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/BlackListDelete", ReplyAction="http://tempuri.org/IRentalCore/BlackListDeleteResponse")]
        void BlackListDelete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/BlackListAdd", ReplyAction="http://tempuri.org/IRentalCore/BlackListAddResponse")]
        int BlackListAdd(DAL.black_list blackList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/BuldTypeAll", ReplyAction="http://tempuri.org/IRentalCore/BuldTypeAllResponse")]
        DAL.build_type[] BuldTypeAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/BathunitTypeAll", ReplyAction="http://tempuri.org/IRentalCore/BathunitTypeAllResponse")]
        DAL.bath_unit[] BathunitTypeAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/StateTypeAll", ReplyAction="http://tempuri.org/IRentalCore/StateTypeAllResponse")]
        DAL.state_type[] StateTypeAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/TermTypeAll", ReplyAction="http://tempuri.org/IRentalCore/TermTypeAllResponse")]
        DAL.term_type[] TermTypeAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/LessorTypeAll", ReplyAction="http://tempuri.org/IRentalCore/LessorTypeAllResponse")]
        DAL.lessor_type[] LessorTypeAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/RegionTypeAll", ReplyAction="http://tempuri.org/IRentalCore/RegionTypeAllResponse")]
        DAL.region_type[] RegionTypeAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/CategoryTypeAll", ReplyAction="http://tempuri.org/IRentalCore/CategoryTypeAllResponse")]
        DAL.category_type[] CategoryTypeAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/RentTypeAll", ReplyAction="http://tempuri.org/IRentalCore/RentTypeAllResponse")]
        DAL.rent_type[] RentTypeAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalCore/PaymentTypeAll", ReplyAction="http://tempuri.org/IRentalCore/PaymentTypeAllResponse")]
        DAL.payment_type[] PaymentTypeAll();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRentalCoreChannel : RentalCMS.RentalCore.IRentalCore, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RentalCoreClient : System.ServiceModel.ClientBase<RentalCMS.RentalCore.IRentalCore>, RentalCMS.RentalCore.IRentalCore {
        
        public RentalCoreClient() {
        }
        
        public RentalCoreClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RentalCoreClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RentalCoreClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RentalCoreClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Login(string login1, string password) {
            return base.Channel.Login(login1, password);
        }
        
        public void FileUpload(string fileName, byte[] data) {
            base.Channel.FileUpload(fileName, data);
        }
        
        public byte[] FileDownload(string remotePath) {
            return base.Channel.FileDownload(remotePath);
        }
        
        public RentalCommon.SearchResult<DAL.view_flat_info> FlatSearch(RentalCommon.SearchQuery query) {
            return base.Channel.FlatSearch(query);
        }
        
        public DAL.flat_info FlatByUrl(string url) {
            return base.Channel.FlatByUrl(url);
        }
        
        public DAL.flat_info FlatById(int id) {
            return base.Channel.FlatById(id);
        }
        
        public int FlatAdd(DAL.flat_info flat) {
            return base.Channel.FlatAdd(flat);
        }
        
        public void FlatUpdate(DAL.flat_info flat) {
            base.Channel.FlatUpdate(flat);
        }
        
        public void FlatDelete(int id) {
            base.Channel.FlatDelete(id);
        }
        
        public void ImageUpdate(DAL.image_list[] images, int flatId) {
            base.Channel.ImageUpdate(images, flatId);
        }
        
        public DAL.image_list[] ImagesByFlatId(int flatId) {
            return base.Channel.ImagesByFlatId(flatId);
        }
        
        public DAL.black_list[] BlackListAll() {
            return base.Channel.BlackListAll();
        }
        
        public DAL.black_list BlackListById(int id) {
            return base.Channel.BlackListById(id);
        }
        
        public void BlackListDelete(int id) {
            base.Channel.BlackListDelete(id);
        }
        
        public int BlackListAdd(DAL.black_list blackList) {
            return base.Channel.BlackListAdd(blackList);
        }
        
        public DAL.build_type[] BuldTypeAll() {
            return base.Channel.BuldTypeAll();
        }
        
        public DAL.bath_unit[] BathunitTypeAll() {
            return base.Channel.BathunitTypeAll();
        }
        
        public DAL.state_type[] StateTypeAll() {
            return base.Channel.StateTypeAll();
        }
        
        public DAL.term_type[] TermTypeAll() {
            return base.Channel.TermTypeAll();
        }
        
        public DAL.lessor_type[] LessorTypeAll() {
            return base.Channel.LessorTypeAll();
        }
        
        public DAL.region_type[] RegionTypeAll() {
            return base.Channel.RegionTypeAll();
        }
        
        public DAL.category_type[] CategoryTypeAll() {
            return base.Channel.CategoryTypeAll();
        }
        
        public DAL.rent_type[] RentTypeAll() {
            return base.Channel.RentTypeAll();
        }
        
        public DAL.payment_type[] PaymentTypeAll() {
            return base.Channel.PaymentTypeAll();
        }
    }
}
